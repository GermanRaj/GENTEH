Create DATABASE homeworkGE;
use homeworkGE;

CREATE TABLE IF NOT EXISTS Sales (
    saleid integer,
    productid integer,
    year integer,
    quantity integer,
    price integer
);

CREATE TABLE IF NOT EXISTS Product (
    productid integer,
    productname VARCHAR(10)
);

TRUNCATE TABLE Sales;
INSERT INTO Sales (saleid, productid, year, quantity, price) VALUES ('1', '100', '2008', '10', '5000');
INSERT INTO Sales (saleid, productid, year, quantity, price) VALUES ('2', '100', '2009', '12', '5000');
INSERT INTO Sales (saleid, productid, year, quantity, price) VALUES ('7', '200', '2011', '15', '9000');

TRUNCATE TABLE Product;

INSERT INTO Product (productid, productname) VALUES ('100', 'Nokia');
INSERT INTO Product (productid, productname) VALUES ('200', 'Apple');
INSERT INTO Product (productid, productname) VALUES ('300', 'Samsung');

-- TASK 1
-- Запрос который выберет марку код и прайс для каждой продажи(каждой saleid)
-- +--------------+-------+-------+
-- | productname | year  | price |
-- +--------------+-------+-------+
-- | Nokia        | 2008  | 5000  |
-- | Nokia        | 2009  | 5000  |
-- | Apple        | 2011  | 9000  |

SELECT * FROM Sales;
SELECT * FROM Product;

SELECT 
t1.productname,
t2.year,
t2.price
FROM product AS t1
INNER JOIN Sales AS t2
ON t1.productid = t2.productid;

-- TASK 2

USE uni;
-- Найти компетенции, которых нет ни у одного преподавателя
SELECT * FROM competencies;
SELECT * FROM teachers2competencies;

SELECT 
t1.title,
-- t1.id,
-- t2.id,
-- t2.teacher_id,
-- t2.competencies_id
FROM competencies AS t1
LEFT JOIN teachers2competencies AS t2
ON t1.id = t2.competencies_id
WHERE t2.competencies_id IS NULL;

-- TASK 3
-- Вывести название курса и имя старосты

SELECT * FROM courses;
SELECT * FROM students;
SELECt * FROM students2courses;

SELECT
t1.title,
-- t1.id,
-- t1.headman_id,
-- t2.id,
t2.name AS headman
FROM courses AS t1
LEFT JOIN students AS t2
ON t1.headman_id = t2.id;

-- TASK 4
-- 
SELECT * FROM students2courses;


-- SELECT 
-- t1.id,
-- t1.name,
-- t2.student_id,
-- t2.course_id,
-- t3.headman_id
-- FROM students AS t1
-- INNER JOIN students2courses AS t2
-- ON t1.id = t2.student_id
-- INNER JOIN courses AS t3
-- ON t2.student_id = t3. headman_id

SELECT
t1.title,
t2.name AS headman
FROM courses AS t1
LEFT JOIN students AS t2
ON t1.headman_id = t2.id
LEFT JOIN students2courses AS t3
ON t2.id = t3.student_id
